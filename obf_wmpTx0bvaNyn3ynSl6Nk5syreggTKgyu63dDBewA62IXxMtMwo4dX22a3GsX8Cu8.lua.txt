local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};_G.Cs={UQSDDAA=3,YASDMRXA=1,YASa0AVV=2};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 +  #Cs + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\52\194","\164\26\236\157\44"),function(v42) if (v9(v42,2)==81) then v30=v8(v11(v42,1,1));return "";else local v103=0;local v104;while true do if (v103==0) then v104=v10(v8(v42,16));if v30 then local v124=v13(v104,v30);v30=nil;return v124;else return v104;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v105=(v43/(2^(v44-(2 -1))))%(2^(((v45-1) -(v44-1)) + 1)) ;return v105-(v105%1) ;else local v106=0;local v107;while true do if (0==v106) then v107=(5 -3)^(v44-1) ;return (((v43%(v107 + v107))>=v107) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (v46==1) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end if (v48==1) then return (v50 * 256) + v49 ;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v51=1;end if (v51==1) then return (v55 * 16777216) + (v54 * 65536) + (v53 * 256) + v52 ;end end end local function v35() local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (1==v56) then v59=1;v60=(v31(v58,1,20) * ((3 -1)^32)) + v57 ;v56=2;end if (v56==0) then v57=v34();v58=v34();v56=1;end if (v56==2) then v61=v31(v58,21,31);v62=((v31(v58,32)==(2 -1)) and  -1) or (620 -(555 + 64)) ;v56=3;end if (v56==3) then if (v61==0) then if (v60==0) then return v62 * 0 ;else local v125=0;while true do if (v125==0) then v61=1;v59=0;break;end end end elseif (v61==2047) then return ((v60==0) and (v62 * ((932 -(857 + 74))/0))) or (v62 * NaN) ;end return v16(v62,v61-1023 ) * (v59 + (v60/(2^52))) ;end end end local function v36(v63) local v64=0;local v65;local v66;while true do if (v64==1) then v65=v11(v27,v29,(v29 + v63) -(569 -(367 + 201)) );v29=v29 + v63 ;v64=2;end if (v64==0) then v65=nil;if  not v63 then local v117=0;while true do if (v117==0) then v63=v34();if (v63==0) then return "";end break;end end end v64=1;end if (v64==3) then return v14(v66);end if (v64==2) then v66={};for v110=1, #v65 do v66[v110]=v10(v9(v11(v65,v110,v110)));end v64=3;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v67={};local v68={};local v69={};local v70={v67,v68,nil,v69};local v71=v34();local v72={};for v80=1,v71 do local v81=0;local v82;local v83;while true do if (v81==1) then if (v82==1) then v83=v32()~=0 ;elseif (v82==2) then v83=v35();elseif (v82==(930 -(214 + 713))) then v83=v36();end v72[v80]=v83;break;end if (0==v81) then v82=v32();v83=nil;v81=1;end end end v70[3]=v32();for v84=1,v34() do local v85=0;local v86;while true do if (v85==0) then v86=v32();if (v31(v86,1,1 + 0 )==0) then local v120=v31(v86,2,3);local v121=v31(v86,4,6);local v122={v33(),v33(),nil,nil};if (v120==0) then local v126=0;while true do if (v126==0) then v122[3]=v33();v122[4]=v33();break;end end elseif (v120==(1 + 0)) then v122[3]=v34();elseif (v120==2) then v122[3]=v34() -(2^16) ;elseif (v120==3) then v122[3]=v34() -(2^(893 -(282 + 595))) ;v122[4]=v33();end if (v31(v121,1,1)==1) then v122[2]=v72[v122[2]];end if (v31(v121,1639 -(1523 + 114) ,2)==(1 + 0)) then v122[3]=v72[v122[3]];end if (v31(v121,3,3)==1) then v122[4]=v72[v122[4]];end v67[v84]=v122;end break;end end end for v87=1 -0 ,v34() do v68[v87-(1066 -(68 + 997)) ]=v39();end return v70;end local function v40(v74,v75,v76) local v77=v74[1];local v78=v74[1272 -(226 + 1044) ];local v79=v74[3];return function(...) local v89=v77;local v90=v78;local v91=v79;local v92=v38;local v93=1;local v94= -1;local v95={};local v96={...};local v97=v20("#",...) -(4 -3) ;local v98={};local v99={};for v108=0,v97 do if (v108>=v91) then v95[v108-v91 ]=v96[v108 + (118 -(32 + 85)) ];else v99[v108]=v96[v108 + 1 ];end end local v100=(v97-v91) + 1 ;local v101;local v102;while true do local v109=0;while true do if (v109==1) then if (v102<=52) then if (v102<=25) then if (v102<=12) then if (v102<=5) then if (v102<=2) then if (v102<=0) then for v177=v101[2],v101[3] do v99[v177]=nil;end elseif (v102>(1 + 0)) then local v185=v101[2];local v186=v101[4];local v187=v185 + 2 ;local v188={v99[v185](v99[v185 + 1 ],v99[v187])};for v339=958 -(892 + 65) ,v186 do v99[v187 + v339 ]=v188[v339];end local v189=v188[1];if v189 then local v383=0;while true do if (0==v383) then v99[v187]=v189;v93=v101[3];break;end end else v93=v93 + 1 ;end else local v190=v90[v101[3]];local v191;local v192={};v191=v18({},{[v7("\115\112\82\36\22\73\87","\114\44\47\59\74")]=function(v342,v343) local v344=v192[v343];return v344[1][v344[2]];end,[v7("\59\140\43\212\194\13\189\33\212\205","\181\100\211\69\177")]=function(v345,v346,v347) local v348=v192[v346];v348[1][v348[2]]=v347;end});for v350=1,v101[4] do local v351=0;local v352;while true do if (v351==0) then v93=v93 + 1 ;v352=v89[v93];v351=1;end if (v351==1) then if (v352[1]==76) then v192[v350-1 ]={v99,v352[3]};else v192[v350-1 ]={v75,v352[3]};end v98[ #v98 + (1 -0) ]=v192;break;end end end v99[v101[2]]=v40(v190,v191,v76);end elseif (v102<=3) then v99[v101[2]]=v99[v101[3]] + v101[4] ;elseif (v102==4) then v99[v101[2]]={};else do return v99[v101[2]];end end elseif (v102<=8) then if (v102<=6) then for v179=v101[2],v101[3] do v99[v179]=nil;end elseif (v102>(12 -5)) then v99[v101[2]]= #v99[v101[353 -(87 + 263) ]];else do return;end end elseif (v102<=10) then if (v102==9) then local v196=v101[2];v99[v196](v99[v196 + (181 -(67 + 113)) ]);else local v197=0;local v198;local v199;local v200;local v201;while true do if (v197==0) then v198=v101[2];v199,v200=v92(v99[v198](v21(v99,v198 + 1 ,v101[3])));v197=1;end if (v197==2) then for v445=v198,v94 do local v446=0;while true do if (v446==0) then v201=v201 + (2 -1) ;v99[v445]=v199[v201];break;end end end break;end if (v197==1) then v94=(v200 + v198) -1 ;v201=0 + 0 ;v197=2;end end end elseif (v102>11) then local v202=0;local v203;while true do if (v202==0) then v203=v101[2];do return v21(v99,v203,v203 + v101[3] );end break;end end else local v204=0;local v205;while true do if (0==v204) then v205=v101[2];do return v21(v99,v205,v94);end break;end end end elseif (v102<=(14 + 4)) then if (v102<=15) then if (v102<=13) then local v140=0;local v141;while true do if (v140==0) then v141=v101[2];v99[v141]=v99[v141](v21(v99,v141 + 1 ,v101[3]));break;end end elseif (v102>14) then v99[v101[2]]=v99[v101[3]]%v101[4] ;elseif (v101[2]<v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=16) then do return v99[v101[2]]();end elseif (v102==17) then local v207=0;local v208;while true do if (v207==0) then v208=v101[2];v99[v208](v21(v99,v208 + 1 ,v94));break;end end else v99[v101[2]]=v99[v101[3]]%v99[v101[4]] ;end elseif (v102<=21) then if (v102<=(75 -56)) then v99[v101[954 -(802 + 150) ]]=v99[v101[3]];elseif (v102>20) then v75[v101[3]]=v99[v101[2]];else local v212=0;local v213;local v214;local v215;while true do if (v212==1) then v215=v99[v213] + v214 ;v99[v213]=v215;v212=2;end if (0==v212) then v213=v101[5 -3 ];v214=v99[v213 + 2 ];v212=1;end if (v212==2) then if (v214>0) then if (v215<=v99[v213 + (1 -0) ]) then v93=v101[3 + 0 ];v99[v213 + (1000 -(915 + 82)) ]=v215;end elseif (v215>=v99[v213 + (2 -1) ]) then v93=v101[3];v99[v213 + 2 + 1 ]=v215;end break;end end end elseif (v102<=23) then if (v102==22) then v75[v101[3]]=v99[v101[2]];else v99[v101[2]]=v76[v101[3]];end elseif (v102>24) then do return v99[v101[2]];end elseif (v101[2]==v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3 -0 ];end elseif (v102<=38) then if (v102<=31) then if (v102<=28) then if (v102<=(1213 -(1069 + 118))) then v99[v101[2]][v101[3]]=v101[4];elseif (v102>27) then local v220=v101[4 -2 ];local v221,v222=v92(v99[v220](v99[v220 + 1 ]));v94=(v222 + v220) -1 ;local v223=0;for v355=v220,v94 do v223=v223 + (1 -0) ;v99[v355]=v221[v223];end else local v224=0;local v225;while true do if (0==v224) then v225=v101[2];do return v99[v225](v21(v99,v225 + 1 ,v101[3]));end break;end end end elseif (v102<=29) then v99[v101[2]]=v76[v101[3]];elseif (v102>30) then local v226=v101[2];v99[v226]=v99[v226](v21(v99,v226 + 1 ,v101[3]));else local v228=v101[2];local v229,v230=v92(v99[v228](v21(v99,v228 + 1 ,v94)));v94=(v230 + v228) -1 ;local v231=0;for v358=v228,v94 do v231=v231 + 1 ;v99[v358]=v229[v231];end end elseif (v102<=34) then if (v102<=32) then local v148=v101[1 + 1 ];local v149,v150=v92(v99[v148](v99[v148 + 1 ]));v94=(v150 + v148) -(1 -0) ;local v151=0;for v181=v148,v94 do local v182=0;while true do if (v182==0) then v151=v151 + 1 ;v99[v181]=v149[v151];break;end end end elseif (v102>33) then v99[v101[2]]=v101[3];else v99[v101[2]][v101[3]]=v99[v101[4]];end elseif (v102<=36) then if (v102==(35 + 0)) then local v236=0;local v237;while true do if (v236==0) then v237=v101[2];do return v99[v237](v21(v99,v237 + 1 ,v101[794 -(368 + 423) ]));end break;end end else v99[v101[2]]();end elseif (v102>37) then do return;end elseif  not v99[v101[2]] then v93=v93 + 1 ;else v93=v101[9 -6 ];end elseif (v102<=45) then if (v102<=41) then if (v102<=39) then v99[v101[2]]=v99[v101[3]][v101[4]];elseif (v102>(58 -(10 + 8))) then local v238=0;local v239;local v240;while true do if (v238==1) then for v447=1, #v98 do local v448=0;local v449;while true do if (v448==0) then v449=v98[v447];for v498=0, #v449 do local v499=v449[v498];local v500=v499[1];local v501=v499[2];if ((v500==v99) and (v501>=v239)) then v240[v501]=v500[v501];v499[1]=v240;end end break;end end end break;end if (0==v238) then v239=v101[2];v240={};v238=1;end end else v93=v101[3];end elseif (v102<=43) then if (v102>42) then local v242=0;local v243;local v244;while true do if (0==v242) then v243=v101[7 -5 ];v244=v99[v243];v242=1;end if (v242==1) then for v450=v243 + 1 ,v94 do v15(v244,v99[v450]);end break;end end else local v245=v101[2];local v246=v99[v245 + 2 ];local v247=v99[v245] + v246 ;v99[v245]=v247;if (v246>(442 -(416 + 26))) then if (v247<=v99[v245 + 1 ]) then v93=v101[3];v99[v245 + 3 ]=v247;end elseif (v247>=v99[v245 + 1 ]) then local v453=0;while true do if (v453==0) then v93=v101[3];v99[v245 + 3 ]=v247;break;end end end end elseif (v102>44) then v93=v101[3];else v99[v101[6 -4 ]]=v101[3] + v99[v101[4]] ;end elseif (v102<=(21 + 27)) then if (v102<=(80 -34)) then v99[v101[2]]= #v99[v101[3]];elseif (v102>(485 -(145 + 293))) then v99[v101[2]]=v99[v101[3]][v101[4]];else v99[v101[2]]=v75[v101[433 -(44 + 386) ]];end elseif (v102<=50) then if (v102>49) then v99[v101[1488 -(998 + 488) ]]=v99[v101[3]] + v101[4] ;else v99[v101[2]]={};end elseif (v102>(17 + 34)) then local v257=v101[2];v99[v257]=v99[v257](v99[v257 + 1 ]);else local v259=v101[2];local v260,v261=v92(v99[v259](v21(v99,v259 + 1 ,v101[3])));v94=(v261 + v259) -1 ;local v262=0;for v361=v259,v94 do local v362=0;while true do if (0==v362) then v262=v262 + 1 ;v99[v361]=v260[v262];break;end end end end elseif (v102<=79) then if (v102<=65) then if (v102<=58) then if (v102<=55) then if (v102<=53) then local v155=0;local v156;local v157;local v158;while true do if (0==v155) then v156=v90[v101[3]];v157=nil;v155=1;end if (v155==1) then v158={};v157=v18({},{[v7("\54\244\190\84\13\206\175","\58\105\171\215")]=function(v389,v390) local v391=0;local v392;while true do if (v391==0) then v392=v158[v390];return v392[1][v392[2]];end end end,[v7("\202\214\143\71\246\112\251\237\132\90","\25\149\137\225\34\129")]=function(v393,v394,v395) local v396=v158[v394];v396[1][v396[2 + 0 ]]=v395;end});v155=2;end if (v155==2) then for v398=1,v101[4] do v93=v93 + 1 ;local v399=v89[v93];if (v399[1]==76) then v158[v398-1 ]={v99,v399[3]};else v158[v398-1 ]={v75,v399[3]};end v98[ #v98 + 1 ]=v158;end v99[v101[2]]=v40(v156,v157,v76);break;end end elseif (v102>54) then if (v99[v101[2]]<=v101[4]) then v93=v93 + 1 ;else v93=v101[1141 -(116 + 1022) ];end else local v263=0;local v264;local v265;local v266;while true do if (0==v263) then v264=v101[2];v265=v99[v264];v263=1;end if (v263==1) then v266=v99[v264 + 2 ];if (v266>(0 -0)) then if (v265>v99[v264 + 1 ]) then v93=v101[3];else v99[v264 + 3 ]=v265;end elseif (v265<v99[v264 + 1 + 0 ]) then v93=v101[3];else v99[v264 + 3 ]=v265;end break;end end end elseif (v102<=56) then v99[v101[2]]=v101[3]~=0 ;elseif (v102==57) then local v267=0;local v268;while true do if (0==v267) then v268=v101[2];do return v21(v99,v268,v94);end break;end end elseif (v99[v101[2]]<=v101[4]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=61) then if (v102<=59) then v99[v101[2]][v101[3]]=v101[4];elseif (v102==60) then local v269=v101[2];local v270=v99[v101[3]];v99[v269 + 1 ]=v270;v99[v269]=v270[v101[4]];else local v274=v101[2];local v275={v99[v274](v21(v99,v274 + 1 ,v94))};local v276=0;for v365=v274,v101[4] do local v366=0;while true do if (v366==0) then v276=v276 + 1 ;v99[v365]=v275[v276];break;end end end end elseif (v102<=63) then if (v102==(226 -164)) then v99[v101[2]]=v99[v101[3]]%v101[4] ;elseif v99[v101[7 -5 ]] then v93=v93 + 1 ;else v93=v101[3];end elseif (v102>64) then v99[v101[2]]=v99[v101[3]] + v99[v101[4]] ;else local v279=v101[2];local v280={};for v367=1, #v98 do local v368=0;local v369;while true do if (v368==0) then v369=v98[v367];for v472=0, #v369 do local v473=v369[v472];local v474=v473[860 -(814 + 45) ];local v475=v473[2];if ((v474==v99) and (v475>=v279)) then local v495=0;while true do if (0==v495) then v280[v475]=v474[v475];v473[1]=v280;break;end end end end break;end end end end elseif (v102<=72) then if (v102<=(167 -99)) then if (v102<=66) then local v162=v101[2];local v163={v99[v162](v21(v99,v162 + 1 + 0 ,v94))};local v164=0;for v183=v162,v101[4] do local v184=0;while true do if (v184==0) then v164=v164 + 1 ;v99[v183]=v163[v164];break;end end end elseif (v102>67) then v99[v101[2]]();else v99[v101[2]]=v99[v101[3]]%v99[v101[2 + 2 ]] ;end elseif (v102<=(955 -(261 + 624))) then if (v102>69) then local v282=0;local v283;local v284;while true do if (v282==1) then v99[v283 + 1 ]=v284;v99[v283]=v284[v101[4]];break;end if (v282==0) then v283=v101[3 -1 ];v284=v99[v101[3]];v282=1;end end else local v285=0;local v286;while true do if (v285==0) then v286=v101[2];v99[v286](v21(v99,v286 + (1081 -(1020 + 60)) ,v94));break;end end end elseif (v102>71) then local v287=v101[2];v99[v287](v21(v99,v287 + 1 ,v101[1426 -(630 + 793) ]));else do return v99[v101[6 -4 ]]();end end elseif (v102<=75) then if (v102<=73) then local v165=v101[9 -7 ];v99[v165]=v99[v165](v21(v99,v165 + 1 ,v94));elseif (v102==(30 + 44)) then v99[v101[2]][v99[v101[3]]]=v99[v101[4]];else local v290=0;local v291;while true do if (v290==0) then v291=v101[2];v99[v291](v99[v291 + 1 ]);break;end end end elseif (v102<=77) then if (v102>(261 -185)) then v99[v101[2]][v101[3]]=v99[v101[4]];else v99[v101[2]]=v99[v101[1750 -(760 + 987) ]];end elseif (v102>78) then v99[v101[2]]=v99[v101[3]] + v99[v101[4]] ;else local v297=0;local v298;local v299;local v300;while true do if (v297==1) then v300=0;for v461=v298,v101[770 -(745 + 21) ] do local v462=0;while true do if (v462==0) then v300=v300 + 1 + 0 ;v99[v461]=v299[v300];break;end end end break;end if (v297==0) then v298=v101[2];v299={v99[v298](v99[v298 + 1 ])};v297=1;end end end elseif (v102<=92) then if (v102<=85) then if (v102<=82) then if (v102<=80) then if (v99[v101[2]]~=v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102==81) then local v302=v101[2];local v303=v99[v302];for v370=v302 + 1 ,v94 do v15(v303,v99[v370]);end else v99[v101[2]][v99[v101[3]]]=v99[v101[4]];end elseif (v102<=83) then v99[v101[2]]=v101[3];elseif (v102>84) then local v306=v101[3];local v307=v99[v306];for v371=v306 + 1 ,v101[4] do v307=v307   .. v99[v371] ;end v99[v101[5 -3 ]]=v307;else v99[v101[2]]=v99[v101[3]][v99[v101[4]]];end elseif (v102<=88) then if (v102<=86) then local v169=0;local v170;local v171;local v172;while true do if (v169==0) then v170=v101[7 -5 ];v171=v99[v170];v169=1;end if (1==v169) then v172=v99[v170 + 2 ];if (v172>0) then if (v171>v99[v170 + 1 + 0 ]) then v93=v101[3 + 0 ];else v99[v170 + 3 ]=v171;end elseif (v171<v99[v170 + 1 ]) then v93=v101[3];else v99[v170 + 3 ]=v171;end break;end end elseif (v102>87) then if (v99[v101[2]]==v101[4]) then v93=v93 + 1 ;else v93=v101[3];end elseif v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=90) then if (v102==89) then if (v99[v101[2]]==v101[4]) then v93=v93 + 1 ;else v93=v101[3];end else v99[v101[2]]=v101[3] + v99[v101[4]] ;end elseif (v102==91) then v99[v101[2]]=v75[v101[3]];else local v314=v101[2];v99[v314](v21(v99,v314 + 1 ,v101[3]));end elseif (v102<=99) then if (v102<=95) then if (v102<=93) then local v173=0;local v174;while true do if (v173==0) then v174=v101[2];v99[v174]=v99[v174](v99[v174 + 1 ]);break;end end elseif (v102>94) then if (v101[2]==v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end elseif  not v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=97) then if (v102>96) then local v315=v101[2];local v316=v101[4];local v317=v315 + (1057 -(87 + 968)) ;local v318={v99[v315](v99[v315 + 1 ],v99[v317])};for v377=1 + 0 ,v316 do v99[v317 + v377 ]=v318[v377];end local v319=v318[1];if v319 then v99[v317]=v319;v93=v101[3];else v93=v93 + 1 ;end elseif (v101[2]<v99[v101[4]]) then v93=v93 + (2 -1) ;else v93=v101[3];end elseif (v102==(1511 -(447 + 966))) then local v320=0;local v321;local v322;local v323;while true do if (v320==1) then v323=0;for v463=v321,v101[4] do v323=v323 + 1 ;v99[v463]=v322[v323];end break;end if (v320==0) then v321=v101[2];v322={v99[v321](v99[v321 + 1 ])};v320=1;end end else v99[v101[2]]=v101[3]~=0 ;end elseif (v102<=102) then if (v102<=100) then local v175=0;local v176;while true do if (0==v175) then v176=v101[2];v99[v176]=v99[v176](v21(v99,v176 + 1 ,v94));break;end end elseif (v102==101) then local v325=v101[3];local v326=v99[v325];for v382=v325 + (2 -1) ,v101[4] do v326=v326   .. v99[v382] ;end v99[v101[2]]=v326;elseif (v99[v101[2]]~=v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=104) then if (v102>103) then local v328=v101[2];v99[v328]=v99[v328]();else v99[v101[2]]=v99[v101[3]][v99[v101[4]]];end elseif (v102==105) then local v332=0;local v333;while true do if (v332==0) then v333=v101[2];v99[v333]=v99[v333]();break;end end else local v334=0;local v335;local v336;local v337;local v338;while true do if (v334==0) then v335=v101[2];v336,v337=v92(v99[v335](v21(v99,v335 + (1818 -(1703 + 114)) ,v94)));v334=1;end if (v334==1) then v94=(v337 + v335) -1 ;v338=0;v334=2;end if (2==v334) then for v466=v335,v94 do v338=v338 + 1 ;v99[v466]=v336[v338];end break;end end end v93=v93 + (702 -(376 + 325)) ;break;end if (v109==0) then v101=v89[v93];v102=v101[1];v109=1;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.9) ~  Much Love, Ferib 

]]--
